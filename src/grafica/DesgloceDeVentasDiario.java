package grafica;

import java.util.ArrayList;
import java.util.Date;

import org.dussan.vaadin.dcharts.DCharts;
import org.dussan.vaadin.dcharts.data.DataSeries;
import org.dussan.vaadin.dcharts.metadata.LegendPlacements;
import org.dussan.vaadin.dcharts.metadata.locations.LegendLocations;
import org.dussan.vaadin.dcharts.metadata.renderers.SeriesRenderers;
import org.dussan.vaadin.dcharts.options.Highlighter;
import org.dussan.vaadin.dcharts.options.Legend;
import org.dussan.vaadin.dcharts.options.Options;
import org.dussan.vaadin.dcharts.options.SeriesDefaults;
import org.dussan.vaadin.dcharts.renderers.series.PieRenderer;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.VerticalLayout;

import logica.Logica;
import valueObject.VODesgloce;

public class DesgloceDeVentasDiario extends CustomComponent implements View {

	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private VerticalLayout mainLayout;
	private PopupDateField date;
	private Label lblTitle;	
	private Grid grdDesgloce;
	private BeanItemContainer<VODesgloce> ds;	
	private Logica logica;
	private Label lblMessage;
	private DCharts pieChart;	

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DesgloceDeVentasDiario() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		logica = new Logica();

		date.addValueChangeListener(new ValueChangeListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub		
				getDesgloceDiario();					
			}
		});
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout = new VerticalLayout();	
		mainLayout.setSpacing(true);		
		mainLayout.setImmediate(true);
		mainLayout.setWidth("100%");
		mainLayout.setDefaultComponentAlignment(Alignment.TOP_CENTER);
		
		lblTitle = new Label("Desgloce de ventas");
		lblTitle.setSizeUndefined();
		lblTitle.setStyleName("h2");
		mainLayout.addComponent(lblTitle);
		
		date = new PopupDateField();				
		date.setCaption("Fecha");
		date.setImmediate(true);		
		mainLayout.addComponent(date);
		
		lblMessage = new Label("");
		lblMessage.setStyleName("messageAlert");
		lblMessage.setSizeUndefined();
		mainLayout.addComponent(lblMessage);
		
		grdDesgloce = new Grid();		
		grdDesgloce.setSizeFull();
		
		pieChart = new DCharts();
		pieChart.setSizeUndefined();		
		mainLayout.addComponent(pieChart);		
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		lblMessage.setValue("");
		date.setValue(new Date());		
			
		if(grdDesgloce != null){
			mainLayout.removeComponent(grdDesgloce);		
		}	
		
		if(pieChart != null){
			mainLayout.removeComponent(pieChart);
		}
	}
	
	private void getDesgloceDiario(){
		if(grdDesgloce != null){
			mainLayout.removeComponent(grdDesgloce);			
		}
		
		if(date.isValid()){			
			ArrayList<VODesgloce> array =  logica.DesgloceVentasDiario(date.getValue());
			if(array != null && !array.isEmpty()){
				lblMessage.setValue("");
				buildChart(array);
				ds = new BeanItemContainer<VODesgloce>(VODesgloce.class, array);
				grdDesgloce.removeAllColumns();
				grdDesgloce.setContainerDataSource(ds);
				grdDesgloce.setColumnOrder("rubro","cantidad");
				mainLayout.addComponent(grdDesgloce);	
			}else{
				lblMessage.setValue("No hay registros para mostrar");
			}
		}		
	}
	
	private void buildChart(ArrayList<VODesgloce> array){
		DataSeries dataSeries = new DataSeries();		
		for (VODesgloce aux : array) {
			dataSeries.newSeries();
			dataSeries.add(aux.getRubro(),aux.getCantidad());	
		}

		SeriesDefaults seriesDefaults = new SeriesDefaults();
		seriesDefaults.setRenderer(SeriesRenderers.PIE);
		seriesDefaults.setRendererOptions(new PieRenderer().setShowDataLabels(true));
		
		Legend legend = new Legend();
		legend.setPlacement(LegendPlacements.OUTSIDE_GRID);
		legend.setLocation(LegendLocations.EAST);
		legend.setShow(true);		
		
		Highlighter highlighter = new Highlighter();
		highlighter.setShow(true);
		highlighter.setShowTooltip(true);
		highlighter.setTooltipAlwaysVisible(true);
		highlighter.setKeepTooltipInsideChart(true);

		Options options = new Options();
		options.setSeriesDefaults(seriesDefaults);
		options.setLegend(legend);
		options.setHighlighter(highlighter);
				
		pieChart.setDataSeries(dataSeries);
		pieChart.setOptions(options);					
		pieChart.show();		
		mainLayout.addComponent(pieChart);
	}

}
